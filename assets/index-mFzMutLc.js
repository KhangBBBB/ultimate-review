var ve=Object.defineProperty;var be=(t,e,n)=>e in t?ve(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var X=(t,e,n)=>(be(t,typeof e!="symbol"?e+"":e,n),n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const m of o.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&s(m)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();function S(){}function ge(t){return t()}function oe(){return Object.create(null)}function A(t){t.forEach(ge)}function Z(t){return typeof t=="function"}function E(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function qe(t){return Object.keys(t).length===0}function y(t,e){t.appendChild(e)}function W(t,e,n){t.insertBefore(e,n||null)}function x(t){t.parentNode&&t.parentNode.removeChild(t)}function ee(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function b(t){return document.createElement(t)}function _(t){return document.createTextNode(t)}function T(){return _(" ")}function xe(){return _("")}function z(t,e,n,s){return t.addEventListener(e,n,s),()=>t.removeEventListener(e,n,s)}function k(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function ke(t){return Array.from(t.childNodes)}function O(t,e){e=""+e,t.data!==e&&(t.data=e)}function K(t,e,n,s){n==null?t.style.removeProperty(e):t.style.setProperty(e,n,s?"important":"")}let te;function F(t){te=t}const $=[],ae=[];let V=[];const re=[],We=Promise.resolve();let J=!1;function _e(){J||(J=!0,We.then(ye))}function Q(t){V.push(t)}const Y=new Set;let P=0;function ye(){if(P!==0)return;const t=te;do{try{for(;P<$.length;){const e=$[P];P++,F(e),Me(e.$$)}}catch(e){throw $.length=0,P=0,e}for(F(null),$.length=0,P=0;ae.length;)ae.pop()();for(let e=0;e<V.length;e+=1){const n=V[e];Y.has(n)||(Y.add(n),n())}V.length=0}while($.length);for(;re.length;)re.pop()();J=!1,Y.clear(),F(t)}function Me(t){if(t.fragment!==null){t.update(),A(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(Q)}}function Ie(t){const e=[],n=[];V.forEach(s=>t.indexOf(s)===-1?e.push(s):n.push(s)),n.forEach(s=>s()),V=e}const G=new Set;let H;function ne(){H={r:0,c:[],p:H}}function se(){H.r||A(H.c),H=H.p}function q(t,e){t&&t.i&&(G.delete(t),t.i(e))}function I(t,e,n,s){if(t&&t.o){if(G.has(t))return;G.add(t),H.c.push(()=>{G.delete(t),s&&(n&&t.d(1),s())}),t.o(e)}else s&&s()}function U(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function R(t){t&&t.c()}function D(t,e,n){const{fragment:s,after_update:i}=t.$$;s&&s.m(e,n),Q(()=>{const o=t.$$.on_mount.map(ge).filter(Z);t.$$.on_destroy?t.$$.on_destroy.push(...o):A(o),t.$$.on_mount=[]}),i.forEach(Q)}function B(t,e){const n=t.$$;n.fragment!==null&&(Ie(n.after_update),A(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function Te(t,e){t.$$.dirty[0]===-1&&($.push(t),_e(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function N(t,e,n,s,i,o,m=null,f=[-1]){const l=te;F(t);const c=t.$$={fragment:null,ctx:[],props:o,update:S,not_equal:i,bound:oe(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(l?l.$$.context:[])),callbacks:oe(),dirty:f,skip_bound:!1,root:e.target||l.$$.root};m&&m(c.root);let r=!1;if(c.ctx=n?n(t,e.props||{},(u,a,...d)=>{const p=d.length?d[0]:a;return c.ctx&&i(c.ctx[u],c.ctx[u]=p)&&(!c.skip_bound&&c.bound[u]&&c.bound[u](p),r&&Te(t,u)),a}):[],c.update(),r=!0,A(c.before_update),c.fragment=s?s(c.ctx):!1,e.target){if(e.hydrate){const u=ke(e.target);c.fragment&&c.fragment.l(u),u.forEach(x)}else c.fragment&&c.fragment.c();e.intro&&q(t.$$.fragment),D(t,e.target,e.anchor),ye()}F(l)}class j{constructor(){X(this,"$$");X(this,"$$set")}$destroy(){B(this,1),this.$destroy=S}$on(e,n){if(!Z(n))return S;const s=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return s.push(n),()=>{const i=s.indexOf(n);i!==-1&&s.splice(i,1)}}$set(e){this.$$set&&!qe(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const Se="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(Se);const L=[{title:"OS: Bash and Linux Commands",subtitle:"",flashcards:[{question:"Write a Bash script that uses a for loop (range) to print numbers from 1 to 100.",answer:`#!/bin/bash
                
for i in {1..100}; do
    echo $i
done`},{question:"Write a Bash script that uses a for loop (C-like) to print numbers from 1 to 100.",answer:`#!/bin/bash

for ((i = 1; i <= 100; i++)); do
  echo $i
done`},{question:"What is the difference between single and double quotes when defining a variable in Bash?",answer:"Single quotes preserve the literal value of each character within the quotes, while double quotes allow variable substitution and interpret certain escape sequences."},{question:"Declare a variable in Bash.",answer:'msg="Hello World"'},{question:"How do you access the value of a variable in Bash?",answer:"Prefix the variable name with a dollar sign ($). For example, echo $variable_name will print the value."},{question:"Declare an array of numbers in Bash.",answer:"numbers=(1 2 3 4 5)"},{question:"Declare an array of strings in Bash.",answer:'fruits=("apple" "banana" "orange" "grape" "kiwi")'},{question:"How can one access individual elements in an array in Bash?",answer:`# Define an array of fruits.
fruits=("apple" "banana" "orange" "grape" "kiwi")
# Access the 2nd element.
echo \${fruits[1]}`},{question:"How do you iterate over an array of fruits in Bash using a for loop?",answer:`#!/bin/bash

# Define an array of fruits
fruits=("apple" "banana" "orange" "grape" "kiwi")

# Iterate over the array using a for loop
for fruit in "\${fruits[@]}"; do
    echo "I like $fruit"
done`},{question:"What is variable substitution in Bash?",answer:"Variable substitution is a feature in Bash where the value of a variable is replaced with its contents. This can be done using '$' for normal variables and '${}' for array elements or complex expressions."},{question:"How do you execute a command in Bash and store its output in a variable?",answer:"variable_name=$(command)"},{question:`FRUIT="Apple"
echo '$FRUIT'`,answer:"$FRUIT"},{question:`get_full_name() {
  echo John Doe
}

echo "My full name is $(get_full_name)."`,answer:"My full name is John Doe."},{question:`str1="Hello"
str+=" World"
echo $str`,answer:"Hello World"},{question:"What is the purpose of the 'cp' command in Linux?",answer:"To copy files or directories from one location to another."},{question:"How do you use the 'cp' command to copy a file in Linux?",answer:"The basic syntax for copying a file is: 'cp source_file destination_directory'. For example, 'cp file.txt /path/to/destination/'"},{question:"How can you copy multiple files using the 'cp' command?",answer:"Specify them as a list after the 'cp' command, followed by the destination directory. For example, 'cp file1.txt file2.txt /path/to/destination/'"},{question:"What option is used to preserve the original file attributes, such as timestamps, when copying with 'cp'?",answer:"Option '-p'. For example, 'cp -p file.txt /path/to/destination/'"},{question:"How do you recursively copy directories and their contents using the 'cp' command?",answer:"Use the '-r' or '-R' option. For example, 'cp -r source_directory /path/to/destination/'"},{question:"What is the purpose of the 'ps' command in Linux?",answer:"To display information about the currently running processes."},{question:"What is the basic syntax of the 'ps' command?",answer:"The basic syntax is simply 'ps'. This will display a snapshot of the currently running processes in the current terminal window."},{question:"How can you view information about all processes running on the system using 'ps'?",answer:"Use 'ps -e' or 'ps aux'."},{question:"What does the 'ps' option '-f' do?",answer:"It provides a full-format listing, displaying more detailed information about each process, including the process hierarchy."},{question:"How do you filter and display specific process information using 'ps'?",answer:"Use the 'ps' command with options like '-C' followed by the process name. For example, 'ps -C firefox' will display information about the Firefox process."},{question:"What is the purpose of the 'ls' command in Linux?",answer:"To list files and directories in a directory."},{question:"What is the basic syntax of the 'ls' command?",answer:"The basic syntax is 'ls [options] [file/directory]'. Without specifying a file or directory, it lists the contents of the current directory."},{question:"How do you display detailed information about files using 'ls'?",answer:"Use the '-l' option. For example, 'ls -l' shows details like file permissions, owner, size, and modification time."},{question:"How can you list all files, including hidden ones, using 'ls'?",answer:"Use the '-a' option. For example, 'ls -a' shows all files, including those whose names start with a dot."},{question:"What 'ls' option is used to sort files by modification time, with the newest first?",answer:"Option '-t'. For example, 'ls -lt' lists files in long format with the newest at the top."},{question:"What is the purpose of the 'mv' command in Linux?",answer:"To move or rename files and directories."},{question:"How do you use 'mv' to move a file or directory to a different location?",answer:"The basic syntax for moving a file is 'mv source_file destination'. For example, 'mv file.txt /path/to/destination/'"},{question:"What happens if you use 'mv' to move a file to an existing directory?",answer:"The 'mv' command will move the file into that directory."},{question:"How do you use 'mv' to rename a file?",answer:"Use 'mv' with the current filename as the source and the new filename as the destination. For example, 'mv old_name.txt new_name.txt'"},{question:"What is the purpose of the '-i' option with the 'mv' command?",answer:"To prompt for confirmation before overwriting an existing file. For example, 'mv -i file.txt /path/to/destination/'"},{question:"What is the purpose of the 'rm' command in Linux?",answer:"To remove or delete files and directories."},{question:"How do you use 'rm' to delete a file?",answer:"The basic syntax for deleting a file is 'rm file.txt'. This command removes the specified file."},{question:"What 'rm' option is used to remove a directory and its contents recursively?",answer:"The '-r' option with 'rm' is used to remove directories and their contents recursively. For example, 'rm -r directory/'"},{question:"How can you force the removal of files without prompting for confirmation?",answer:"Use the '-f' option. For example, 'rm -f file.txt'"},{question:"What is the purpose of the '-i' option with the 'rm' command?",answer:"To prompt for confirmation before removing each file. For example, 'rm -i file.txt'"},{question:"What is the purpose of the 'mkdir' command in Linux?",answer:"To create new directories (folders)."},{question:"How do you use 'mkdir' to create a new directory?",answer:"The basic syntax for creating a new directory is 'mkdir directory_name'. This command creates a directory with the specified name."},{question:"What 'mkdir' option is used to create parent directories if they do not exist?",answer:"Option '-p'. For example, 'mkdir -p path/to/new_directory/'"},{question:"How can you set the permissions of the new directory using 'mkdir'?",answer:"Use the '--mode' or '-m' option followed by the numeric mode. For example, 'mkdir -m 755 new_directory/'"},{question:"What happens if you try to create a directory that already exists with 'mkdir'?",answer:"It will display an error message unless the '-p' option is used."},{question:"What is the purpose of the 'rmdir' command in Linux?",answer:"To remove empty directories."},{question:"How do you use 'rmdir' to remove an empty directory?",answer:"rmdir directory_name"},{question:"What happens if you attempt to use 'rmdir' on a non-empty directory?",answer:"It will display an error message as 'rmdir' can only remove empty directories."},{question:"What is an alternative command for removing directories, including non-empty ones?",answer:"rm -r directory/"},{question:"Is there any option available for 'rmdir' to force the removal of a non-empty directory?",answer:"No. For that purpose, 'rm -r' is commonly used."},{question:"What is the purpose of the 'echo' command in Linux?",answer:"To display messages or values on the terminal."},{question:"How do you use 'echo' to print a message to the terminal?",answer:"echo Hello, World!"},{question:"What is the purpose of the '-e' option with the 'echo' command?",answer:"To enable the interpretation of backslash escapes, allowing you to include special characters in the output. For example, 'echo -e 'Line1\\nLine2'' will print two lines."},{question:"How can you redirect the output of 'echo' to a file?",answer:"Use the '>' operator. For example, 'echo 'Hello' > output.txt' will create a file named 'output.txt' with the text 'Hello'."},{question:"What is the purpose of the '-n' option with the 'echo' command?",answer:"To suppress the trailing newline, allowing you to print text without adding a newline character at the end."},{question:"What is the purpose of the 'more' command in Linux?",answer:"To display the contents of a text file or command output in a paginated manner."},{question:"How do you use 'more' to view the contents of a text file page by page?",answer:"more file_name"},{question:"What key can you press to advance to the next page while using 'more'?",answer:"Space"},{question:"How can you quit or exit from the 'more' command?",answer:"Press the 'q' key."},{question:"What is an alternative command to 'more' that also allows backward navigation?",answer:"less"},{question:"What is the purpose of the 'date' command in Linux?",answer:"To display or set the system date and time."},{question:"How do you use 'date' to display the current date and time?",answer:"The basic syntax for displaying the current date and time is simply 'date'. This command will output the current date and time in the default format."},{question:"What 'date' option is used to format the output according to a specific format string?",answer:"The '+FORMAT' option with 'date' is used to format the output according to a specific format string. For example, 'date '+%Y-%m-%d'' will display the date in the 'YYYY-MM-DD' format."},{question:"How do you set the system date and time using 'date'?",answer:"Use the 'date' command with the '-s' option followed by the desired date and time. For example, 'sudo date -s '2024-01-30 12:34:56''"},{question:"What is the purpose of the '-u' option with the 'date' command?",answer:"To display or set the Coordinated Universal Time (UTC) instead of the local time."},{question:"What is the purpose of the 'time' command in Linux?",answer:"To measure the execution time of a command or script."},{question:"How do you use 'time' to measure the execution time of a command?",answer:"The basic syntax for measuring the execution time of a command is 'time command'. For example, 'time ls' will display the real, user, and system time taken by the 'ls' command."},{question:"What does the 'real', 'user', and 'sys' values represent in the output of 'time'?",answer:"'real' represents the elapsed or wall clock time, 'user' represents the CPU time spent in user mode, and 'sys' represents the CPU time spent in system mode."},{question:"How can you redirect only the timing information of 'time' to a file?",answer:"Use 'time command 2> timing.txt'. This will redirect the standard error (stderr) output to the specified file."},{question:"What is the purpose of the '-p' option with the 'time' command?",answer:"To change the output format to be more machine-readable, providing timing information in a format that is easier to parse."},{question:"What is the purpose of the 'kill' command in Linux?",answer:"To send signals to processes, allowing for termination or manipulation of their behavior."},{question:"How do you use 'kill' to terminate a process by its process ID (PID)?",answer:"The basic syntax for terminating a process by its PID is 'kill PID'. For example, 'kill 1234' will send the default signal (SIGTERM) to process with PID 1234, requesting termination."},{question:"What is the default signal sent by 'kill'?",answer:"SIGTERM (termination signal), which allows the process to perform cleanup operations before exiting."},{question:"How can you force the termination of a process using 'kill'?",answer:"Use 'kill -9 PID' or 'kill -SIGKILL PID'. This sends the SIGKILL signal, which immediately terminates the process without allowing it to perform cleanup."},{question:"What is an alternative command to 'kill' for sending signals to processes?",answer:"The 'pkill' command is an alternative to 'kill' that allows you to send signals to processes based on their names or other attributes."},{question:"What is the purpose of the 'history' command in Linux?",answer:"To display the command history list, which shows the previously executed commands in the current session."},{question:"How do you use 'history' to display the command history list?",answer:"The basic syntax for displaying the command history is simply 'history'. This command will show a numbered list of previously executed commands in the current session."},{question:"What 'history' option is used to limit the number of commands displayed?",answer:"Option '-n'. For example, 'history -n 10' will show the last 10 commands."},{question:"How can you execute a command from the history by its number?",answer:"Use '!n', where 'n' is the command number. For example, '!5' will re-run the fifth command from the history."},{question:"What is the purpose of the 'history' command with the '-c' option?",answer:"To clear the entire command history, removing all previously executed commands from the history list."},{question:"What is the purpose of the 'chmod' command in Linux?",answer:"To change the permissions (read, write, execute) of files and directories."},{question:"How do you use 'chmod' to add execute permission to a file?",answer:"chmod +x filename"},{question:"What is the numeric representation of read, write, and execute permissions in 'chmod'?",answer:"In the numeric representation of permissions, read is represented by 4, write by 2, and execute by 1. These values can be added to represent different combinations. For example, 'chmod 755 filename' grants read, write, and execute permission to the owner, and read and execute permission to others."},{question:"How can you recursively change permissions for all files and subdirectories within a directory?",answer:"Use 'chmod -R'. For example, 'chmod -R 644 directory/' sets read and write permissions for the owner and read-only permissions for others on all files and directories inside 'directory'."},{question:"What is the purpose of the 'chmod' option '-c'?",answer:"To display a message only if changes are made to the permissions."},{question:"What is the purpose of the 'chown' command in Linux?",answer:"To change the ownership of files and directories."},{question:"How do you use 'chown' to change the owner of a file or directory?",answer:"The basic syntax for changing the owner of a file or directory is 'chown new_owner: new_group filename'. This command sets the new owner and, optionally, the new group for the specified file or directory."},{question:"What is the purpose of the '-R' option with 'chown'?",answer:"To recursively change ownership. This means that the specified ownership changes are applied to all files and subdirectories within the target directory."},{question:"How can you change only the group ownership of a file using 'chown'?",answer:"Use 'chown :new_group filename'. Omitting 'new_owner' and specifying only the 'new_group' will change the group ownership."},{question:"What is the purpose of the '--reference' option with 'chown'?",answer:"To copy the ownership of one file or directory to another. For example, 'chown --reference=reference_file target_file' sets the ownership of 'target_file' to match 'reference_file'."},{question:"What is the purpose of the 'man' command in Linux?",answer:"To display the manual pages for other commands, providing detailed information, usage, options, and examples."},{question:"How do you use the 'man' command to view the manual page for a specific command?",answer:"Use the syntax 'man [command]'. For example, 'man ls' displays the manual page for the 'ls' command."},{question:"What are manual pages in Linux?",answer:"Manual pages are organized documentation providing information on commands, utilities, and functions in the Linux operating system."},{question:"How are manual pages organized?",answer:"Manual pages are organized into sections, denoted by numbers (e.g., Section 1 for user commands, Section 8 for system administration commands)."}]},{title:"OS: Lecture 2",subtitle:"OS Overview, Virtual Machine Monitor",flashcards:[{question:"What is an Operating System?",answer:"An operating system is a program that acts as an intermediary between a user of a computer and the computer hardware."},{question:"What are the goals of an Operating System?",answer:`1. Execute user programs and make solving user problems easier.
2. Make the computer system convenient to use.
3. Use the computer hardware in an efficient manner.`},{question:"What are the four components of a computer system?",answer:"Hardware, operating system, application programs, and users."},{question:"What does the hardware component of a computer system provide?",answer:"CPU (Central Processing Unit), memory, and I/O (Input/Output) devices."},{question:"What is the role of the operating system in a computer system?",answer:"The operating system controls and coordinates the use of hardware among various applications and users."},{question:"How do application programs contribute to a computer system?",answer:"Application programs define the ways in which the system resources are used to solve the computing problems of the users. Examples include word processors, compilers, web browsers, database systems, and video games."},{question:"Who constitutes the 'Users' component in a computer system?",answer:"People, machines, and other computers."},{question:"How is the kernel defined in the context of an operating system?",answer:"The one program running at all times on the computer."},{question:"What are the two categories that encompass everything else besides kernel in an operating system?",answer:"System program (ships with the operating system) or an application program."},{question:"What is a process in the context of computer systems?",answer:"A process is a program in execution. It is a unit of work within the system. Unlike a program, which is a passive entity, a process is an active entity."},{question:"What resources does a process need to accomplish its task?",answer:"CPU (Central Processing Unit), memory, I/O (Input/Output), files, and initialization data."},{question:"What is a multi-threaded process?",answer:"A multi-threaded process has one program counter per thread. Threads within a process can execute independently."},{question:"How do processes run concurrently in a computer system?",answer:"In a computer system, there are typically many processes, some user-related, and some related to the operating system, running concurrently on one or more CPUs. Concurrency is achieved by multiplexing the CPUs among the processes/threads."},{question:"What activities is the operating system responsible for in connection with process management?",answer:`1. Creating and deleting both user and system processes
2. Suspending and resuming processes
3. Providing mechanisms for process synchronization
4. Providing mechanisms for process communication
5. Providing mechanisms for deadlock handling`},{question:"What role does memory management play in computer systems?",answer:"Memory management is responsible for determining what data and instructions are in memory, optimizing CPU utilization, and ensuring efficient computer response to users."},{question:"What are the key responsibilities of memory management?",answer:`1. Keeping track of which parts of memory are currently being used and by whom
2. Deciding which processes (or parts thereof) and data to move into and out of memory
3. Allocating and deallocating memory space as needed`},{question:"All instructions must be in ____ in order to be executed.",answer:"memory"},{question:"In storage management, what is the logical storage unit?",answer:"file"},{question:"What is the role of each storage medium in storage management?",answer:"Each storage medium, such as a disk drive or tape drive, is controlled by a device. Varying properties include access speed, capacity, data-transfer rate, and access method (sequential or random)."},{question:"What are the key activities of file-system management?",answer:"File-system management involves organizing files into directories and implementing access control. OS activities related to file-system management include creating and deleting files and directories, primitives to manipulate files and directories, mapping files onto secondary storage, and backing up files onto stable (non-volatile) storage media."},{question:"How does the operating system handle access control in storage management?",answer:"Access control on most systems is used to determine who can access what. The operating system is responsible for managing access to files and directories."},{question:"What are the OS activities related to file creation and deletion?",answer:"OS activities related to file creation and deletion include creating and deleting files and directories, which are fundamental operations in file-system management."},{question:"What does the term 'primitives' refer to in the context of file-system management?",answer:"Primitives in file-system management are basic operations or functions provided by the operating system to manipulate files and directories. These include actions like reading, writing, and deleting files."},{question:"Why is backing up files onto stable storage media important in storage management?",answer:"Backing up files onto stable (non-volatile) storage media is crucial for data preservation and recovery. It ensures that important data is stored redundantly and can be retrieved in case of system failures or data loss."},{question:"What is the responsibility of the I/O subsystem?",answer:`1. Memory management of I/O, including buffering (storing data temporarily during transfer), caching (storing parts of data in faster storage for performance), and spooling (overlapping output of one job with input of other jobs)
2. Providing a general device-driver interface
3. Managing drivers for specific hardware devices`},{question:"What is buffering in the context of I/O subsystem?",answer:"Buffering in the I/O subsystem involves temporarily storing data while it is being transferred. This helps in managing and optimizing the flow of data between the CPU and I/O devices."},{question:"What is caching?",answer:"Caching in the I/O subsystem involves storing parts of data in faster storage for performance."},{question:"How does caching contribute to the I/O subsystem performance?",answer:"It enhances speed by allowing frequently accessed data to be retrieved quickly from the cache rather than the slower main memory or external storage."},{question:"What is spooling in the context of the I/O subsystem?",answer:"Spooling in the I/O subsystem refers to the overlapping of the output of one job with the input of other jobs. This helps in improving overall system efficiency and resource utilization."},{question:"What is the purpose of the general device-driver interface in the I/O subsystem?",answer:"The general device-driver interface in the I/O subsystem provides a standardized way for the operating system to interact with various hardware devices. It abstracts the details of specific device drivers, allowing the OS to support a variety of devices seamlessly."},{question:"What role do drivers play in the I/O subsystem?",answer:"Drivers in the I/O subsystem are responsible for specific hardware devices. They facilitate communication between the operating system and the hardware, ensuring proper functioning and interaction with the devices."},{question:"What is the major concern of realtime OS?",answer:"Meeting time constraints"},{question:"What are examples of realtime OS?",answer:"RT Linux, QNX, and Vxworks"},{question:"What is an example of embedded OS?",answer:"Contiki OS"},{question:"What are examples of mobile OS?",answer:"Android, iOS, and Windows Touch"},{question:"What is a Virtual Machine Monitor (VMM) also known as?",answer:"A hypervisor."},{question:"What is the purpose of a Virtual Machine Monitor?",answer:"To enable running multiple operating systems on a single physical machine."},{question:"Can you provide examples of Virtual Machine Monitors?",answer:"VMWare, Microsoft's VirtualPC/VirtualServer, Parallels (Macintosh), and Xen."},{question:"What is a Type I Virtual Machine Monitor (VMM)?",answer:"A Type I VMM runs directly on the raw hardware of a computer."},{question:"What is a Type II Virtual Machine Monitor (VMM)?",answer:"A Type II VMM runs hosted on another operating system, rather than directly on the raw hardware."},{question:"When did virtualization first appear in IBM mainframes?",answer:"Virtualization first appeared in IBM mainframes in 1972."},{question:"What was the initial purpose of virtualization on IBM mainframes?",answer:"It allowed multiple users to share a batch-oriented system."},{question:"How did the formal definition of virtualization contribute to its expansion beyond IBM?",answer:"The formal definition of virtualization specified that a Virtual Machine Monitor (VMM) provides an environment for programs that is essentially identical to the original machine. It also ensured that programs running within that environment show only minor performance decreases, and the VMM is in complete control of system resources."},{question:"When did researchers start virtualizing on general-purpose PCs?",answer:"In the late 1990s, Intel CPUs became fast enough for researchers to try virtualizing on general-purpose PCs."},{question:"Which technologies, created in the late 1990s, are still used today for virtualization?",answer:"Xen and VMware created technologies in the late 1990s, which are still used today for virtualization."},{question:"How has virtualization expanded over time?",answer:"Virtualization has expanded to many operating systems, CPUs, and Virtual Machine Monitors (VMMs)."},{question:"How does virtualization protect the host system and VMs?",answer:"The host system is protected from VMs, and VMs are protected from each other. This helps prevent the spread of viruses, and sharing is facilitated through shared file system volumes and network communication."},{question:"What are some actions that can be performed on a running VM?",answer:"Actions such as freeze, suspend, and running VM can be performed. VMs can be moved or copied to another location and then resumed. Snapshot functionality captures a given state, allowing restoration to that state. Some Virtual Machine Monitors (VMMs) enable multiple snapshots per VM. Cloning involves creating a copy and running both the original and the copy."},{question:"What is a practical use of running multiple, different OSes on a single machine?",answer:"Consolidation and application development"},{question:"What approach is suggested to achieve a rent-a-server economy for Internet services?",answer:"The suggested approach is to use Virtual Machine Monitors (VMMs) to provide a rent-a-server economy, where users can rent virtual servers for hosting their services on the Internet."},{question:"What does EC2 stand for?",answer:"Amazon's Elastic Compute Cloud"},{question:"What are benefits of EC2?",answer:`* Scalability: new machines can be created in minutes.
* Security: virtual machines provide stronger isolation than OS processes.
* Developer control: developers choose the OS, software, libraries, etc.
* Low cost: developers pay only for what they use.`},{question:"What distinguishes the VMM type I?",answer:"In this implementation, the VMM is part of the firmware, and the operating system requires no special modifications. Each guest in this scenario has dedicated hardware, resulting in a smaller feature set compared to other types of virtualization."},{question:"What is a challenge in implementing I/O for VMM type I?",answer:"Implementing I/O is challenging because it's difficult to have enough devices and controllers to dedicate to each guest."},{question:"How is shared I/O handled in some cases in VMM type I?",answer:"In some instances, the VMM implements a control partition that runs daemons, and other guests communicate with this partition for shared I/O."},{question:"What unique capability can VMM type I provide in terms of virtualization?",answer:"This type of VMM can offer virtualization-within-virtualization, where a guest itself can act as a VMM with its own set of guests. Other types of VMMs may have difficulty achieving this."},{question:"Why is Type 2 VMM implementation considered less interesting from an OS perspective?",answer:"Type 2 VMM implementation is less interesting from an OS perspective because there is very little OS involvement in virtualization. The VMM is treated as another process, run, and managed by the host operating system."},{question:"How is the Type 2 VMM managed by the host in terms of OS involvement?",answer:"The Type 2 VMM is simply another process run and managed by the host operating system. Even the host is unaware that it is running a VMM and virtualizing guests."},{question:"What is a characteristic of Type 2 VMMs in terms of overall performance?",answer:"Type 2 VMMs tend to have poorer overall performance compared to other virtualization approaches because they can't take full advantage of some hardware features."},{question:"What is a benefit of Type 2 VMMs despite their potential performance limitations?",answer:"A benefit of Type 2 VMMs is that they require no changes to the host operating system. This means that the host OS remains unchanged, simplifying the implementation process."}]},{title:"OS: Lecture 3",subtitle:"Structure",flashcards:[{question:"Operating systems provide an ____ for execution of programs and services to ____ and ____",answer:`environment
programs
users`},{question:"What are the different user interfaces in operating systems?",answer:"Command-Line (CLI), Graphical User Interface (GUI), Batch"},{question:"What are some of the operating-system services that provide functions helpful to the user?",answer:`1. User interface
2. Program execution
3. I/O operations
4. File-system manipulation
5. Communications
6. Error detection
7. Resources allocation
8. Accounting
9. Protection and security`},{question:"What is accounting function in the operating system?",answer:"Keep track of which users use how much and what kinds of computer resources"},{question:"Why is protection and security important in multiuser or networked computer systems?",answer:"Ensure that concurrent processes do not interfere with each other. Protection involves controlling access to system resources, while security requires user authentication to safeguard the system from outsiders."},{question:"How do processes communicate in operating systems, and what are the two main methods mentioned?",answer:"Processes in operating systems communicate either on the same computer or between computers over a network."},{question:"What are the two main methods for processes to communicate in an operating system?",answer:"Shared memory and message passing"},{question:"Define protection in the context of operating systems.",answer:"Protection controls access to system resources, preventing unauthorized use by enforcing user permission-based restrictions."},{question:"How does resource allocation work when multiple users or jobs are running concurrently?",answer:"Resource allocation involves distributing CPU cycles, main memory, file storage, and I/O devices among concurrent users or jobs. This ensures fair and efficient utilization of resources."},{question:"Explain the role of user authentication in ensuring security in multiuser or networked computer systems.",answer:"User authentication verifies and restricts access to authorized users, ensuring the security of sensitive information."},{question:"What does CLI stand for in the context of User Operating System Interface?",answer:"CLI stands for Command Line Interface."},{question:"Where is the CLI sometimes implemented?",answer:"CLI is sometimes implemented in the kernel and sometimes by systems programs."},{question:"____ are multiple flavors of CLI implemented to interpret commands.",answer:"Shells"},{question:"What is the primary function of a CLI?",answer:"The primary function of a CLI is to fetch a command from the user and execute it."},{question:"How are commands handled in CLI regarding built-in features and programs?",answer:"Commands in CLI can be either built-in or just names of programs. If the latter, adding new features doesn't require shell modification."},{question:"How are files, programs, and actions represented in a desktop metaphor interface?",answer:"Icons"},{question:"What kind of actions can be triggered by various mouse buttons over objects in a desktop metaphor interface?",answer:"Various mouse buttons over objects in the interface can cause actions such as providing information, displaying options, executing functions, or opening directories (known as folders)."},{question:"Where was the desktop metaphor interface invented?",answer:"Xerox PARC."},{question:"Many systems now include both ____ and ____ interfaces",answer:`GUI
CLI`},{question:"Describe the interface of Apple Mac OS X, including its underlying components.",answer:'Apple Mac OS X has an "Aqua" GUI interface with a UNIX kernel underneath and shells available.'},{question:"How do Unix and Linux systems typically provide interfaces?",answer:"Unix and Linux systems typically have a CLI with optional GUI interfaces."},{question:"What are some examples of desktop environments (GUI interfaces) for Linux?",answer:"CDE, KDE, and GNOME"},{question:"How are actions and selections typically performed on touchscreen devices?",answer:"Actions and selections on touchscreen devices are based on gestures."},{question:"What is used for text entry on touchscreen devices?",answer:"Text entry on touchscreen devices is facilitated using a virtual keyboard."},{question:"Besides gestures and virtual keyboards, what is another method of interaction with touchscreen devices?",answer:"Voice commands"},{question:"What is the role of system calls in the context of an operating system?",answer:"System calls provide a programming interface to the services offered by the operating system."},{question:"In what programming languages are system calls typically written?",answer:"High-level language, such as C or C++"},{question:"How are programs most commonly accessing system calls?",answer:"Via a high-level Application Programming Interface (API) rather than through direct system call use"},{question:"Name three of the most common APIs for accessing System Calls.",answer:`1. Win32 API for Windows
2. POSIX API for POSIX-based systems (including UNIX, Linux, and Mac OS X)
3. Java API for the Java virtual machine (JVM)`},{question:"Give an example for a standard API in Linux operating system.",answer:`#include <unistd.h>
ssize_t read(int fd, void *buf, size_t count)

* int fd - represents the file descriptor intended for reading
* void *buf - refers to a buffer designated for storing the read data
* size_t count - denotes the maximum number of bytes to be read into the buffer`},{question:"How are system calls typically identified in the context of their implementation?",answer:"System calls are typically associated with a number, and the system-call interface maintains a table indexed according to these numbers."},{question:"What is the role of the system call interface?",answer:"The system-call interface invokes the intended system call in the OS kernel and returns the status of the system call along with any return values."},{question:"What knowledge does the caller need about the system call implementation?",answer:"The caller does not need to know anything about how the system call is implemented. They just need to obey the API and understand what the OS will do as a result of the call."},{question:"What does API stand for?",answer:"Application Programming Interface"},{question:"How are most details of the OS interface hidden from the programmer?",answer:"Most details of the OS interface are hidden from the programmer by the API. This abstraction is managed by a run-time support library, which is a set of functions built into libraries included with the compiler."},{question:"What are the three general methods used for passing parameters to the OS during a system call?",answer:`1. Passing parameters in registers
2. Storing parameters in a block or table in memory, with the address of the block passed as a parameter in a register (used by Linux)
3. Placing parameters onto the stack by the program and having the operating system pop them off the stack.`},{question:"How does the simplest method of passing parameters work?",answer:"The simplest method involves passing the parameters directly in registers. However, in some cases, there may be more parameters than available registers."},{question:"Which approach is taken by Linux for passing parameters during a system call?",answer:"Linux uses the approach of storing parameters in a block or table in memory, with the address of the block passed as a parameter in a register."},{question:"What is common between the block and stack methods of passing parameters?",answer:"Both the block and stack methods do not limit the number or length of parameters being passed."},{question:"What is a notable characteristic of MS-DOS in terms of multitasking?",answer:"MS-DOS is a single-tasking operating system, meaning it can only execute one task at a time."},{question:"When is the shell invoked in MS-DOS?",answer:"The shell in MS-DOS is invoked when the system is booted."},{question:"How does MS-DOS handle the running of programs?",answer:"Running a program involves a simple method with no process creation. The program is loaded into memory, overwriting all but the kernel, without creating a separate process."},{question:"What is the memory model used by MS-DOS?",answer:"MS-DOS operates with a single memory space."},{question:"What happens when a program exits in MS-DOS?",answer:"The shell is reloaded."},{question:"What operations are covered by process control system calls?",answer:"Creating processes, terminating processes, ending processes, aborting processes, loading processes, executing processes, getting process attributes, setting process attributes, waiting for time, waiting for events, signaling events, memory allocation and deallocation, memory dumping in case of errors, using a debugger for bug determination, and single-step execution. Additionally, ."},{question:"____ are used for managing access to shared data between processes",answer:"Locks"},{question:"What operations are covered by file management system calls?",answer:"Creating files, deleting files, opening files, closing files, reading from files, writing to files, repositioning within files, and getting or setting file attributes."},{question:"What operations are covered by device management system calls?",answer:"Requesting devices, releasing devices, reading from devices, writing to devices, repositioning within devices, getting device attributes, setting device attributes, and logically attaching or detaching devices."},{question:"What functions do information maintenance system calls perform?",answer:"Information maintenance system calls include getting or setting time and date, getting system data, setting system data, and getting or setting process, file, or device attributes."},{question:"What are the communication-related system calls?",answer:"Communication system calls involve creating and deleting communication connections, sending and receiving messages (if following a message-passing model with host or process names, especially from client to server), using a shared-memory model to create and gain access to memory regions, transferring status information, and attaching or detaching remote devices."},{question:"Give examples for Windows system calls for process controls",answer:`CreateProcess()
ExitProcess()
WaitForSingleObject()`},{question:"Give examples for Unix system calls for process controls",answer:`fork()
exit()
wait()`},{question:"Give examples for Windows system calls for file manipulation.",answer:`CreateFile()
ReadFile()
WriteFile()
CloseHandle()`},{question:"Give examples for Unix system calls for file manipulation.",answer:`open()
read()
write()
close()`},{question:"System programs provide a ____ environment for program ____ and ____.",answer:`convenient
development
execution`},{question:"Into what categories can system programs be divided?",answer:"File manipulation, status information, programming language support, program loading and execution, communications, background services, and application programs."},{question:"What is the role of system programs in defining a user's view of the operating system?",answer:"Most users' view of the operating system is defined by system programs, not the actual system calls."},{question:"What functions does file management system programs perform?",answer:"Creating, deleting, copying, renaming, printing, dumping, listing, and generally manipulating files and directories."},{question:"What tasks are performed by status information system programs?",answer:"Status information system programs perform tasks such as querying the system for information like date, time, available memory, disk space, and the number of users. They may also provide detailed performance, logging, and debugging information. Typically, these programs format and print the output to the terminal or other output devices. Some systems implement a registry for storing and retrieving configuration information."},{question:"What functions do file modification system programs perform?",answer:"File modification system programs include text editors for creating and modifying files. Additionally, they provide special commands to search the contents of files or perform transformations on the text."},{question:"What types of tools are included in programming-language support system programs?",answer:"Programming-language support system programs include compilers, assemblers, debuggers, and interpreters."},{question:"What functions are associated with program loading and execution system programs?",answer:"Program loading and execution system programs include absolute loaders, relocatable loaders, linkage editors, overlay loaders, and debugging systems for both higher-level and machine language."},{question:"What is the role of communication system programs?",answer:"Communication system programs provide the mechanism for creating virtual connections among processes, users, and computer systems. They enable users to send messages to one another's screens, browse web pages, send electronic-mail messages, log in remotely, and transfer files from one machine to another."},{question:"What is the startup behavior of background services system programs?",answer:"Background services system programs launch at boot time, and some terminate after system startup, while others continue running from system boot to shutdown."},{question:"What facilities do background services system programs provide?",answer:"Background services system programs offer facilities such as disk checking, process scheduling, error logging, and printing to enhance the overall system functionality."},{question:"In which context do background services system programs run?",answer:"Background services system programs run in user context, not kernel context, contributing to system stability and security."},{question:"What are background services system programs commonly known as?",answer:"Background services system programs are commonly known as services, subsystems, or daemons."},{question:"What distinguishes application programs within system programs?",answer:"Application programs don't pertain to the system itself; instead, they are designed to serve users' specific needs and tasks."},{question:"Who runs application programs?",answer:"Application programs are run by users to perform various tasks and functions on the computer."},{question:"Is an application program typically considered part of the operating system?",answer:"No, application programs are not typically considered part of the operating system; they operate independently and serve user-specific purposes."},{question:"How are application programs launched?",answer:"Application programs can be launched by various means, such as command line inputs, mouse clicks, or finger pokes, depending on the user interface."},{question:"Where should the design of an operating system start?",answer:"The design of an operating system should start by defining goals and specifications, which are influenced by factors such as hardware and the type of system."},{question:"What are the key considerations for operating system design in relation to user goals?",answer:"User goals for operating systems include being convenient to use, easy to learn, reliable, safe, and fast, ensuring a positive user experience."},{question:"What are the key considerations for operating system design in relation to system goals?",answer:"System goals for operating systems include being easy to design, implement, and maintain, as well as being flexible, reliable, error-free, and efficient."},{question:"How are mechanisms and policies related in operating system design?",answer:"Mechanisms determine how to perform a task, while policies decide what specific actions will be taken in the operating system."},{question:"Why is the separation of policy from mechanism considered a crucial principle?",answer:"The separation of policy from mechanism is crucial because it allows maximum flexibility. If policy decisions need to be changed later, the system can adapt without significant modifications to the underlying mechanisms (e.g., timer)."},{question:"What is the typical language mix in operating system implementation?",answer:"Operating system implementation usually involves a mix of languages, with the lowest levels written in assembly, the main body in C, and system programs using languages like C, C++, and scripting languages such as PERL, Python, and shell scripts."},{question:"Why is using a high-level language advantageous for operating systems?",answer:"Implementing more of the operating system in a high-level language makes it easier to port the system to other hardware. However, this approach may lead to slower performance compared to lower-level languages."},{question:"How can emulation be beneficial for operating systems?",answer:"Emulation allows an operating system to run on non-native hardware, providing compatibility and flexibility in diverse computing environments."},{question:"What are some approaches to structuring operating systems?",answer:"Operating systems can be structured in various ways, ranging from simple structures, such as MS-DOS, to more complex structures, like UNIX. Another approach is the microkernel structure, as seen in systems like Mach."},{question:"Can you provide an example of an operating system with a simple structure?",answer:"MS-DOS is an example of an operating system with a simple structure, which reflects a straightforward design to manage basic system functions."},{question:"What is an example of an operating system with a more complex structure?",answer:"UNIX is an example of an operating system with a more complex structure, designed to handle a wide range of functionalities and accommodate diverse user needs."},{question:"What is the microkernel structure in operating systems?",answer:"The microkernel structure, exemplified by systems like Mach, involves a small, core set of essential functions, while additional features are implemented as separate user-level processes or servers, promoting modularity and flexibility."},{question:"What is a characteristic of the operating system MS-DOS in terms of its structure?",answer:"MS-DOS is an example of an operating system with a simple structure. It was designed to provide the most functionality in the least space and is not divided into modules. Although MS-DOS has some structure, its interfaces and levels of functionality are not well separated."},{question:"What are the two separable parts that UNIX consists of?",answer:"System programs and the kernel."},{question:"What is a characteristic of the microkernel system structure?",answer:"In a microkernel system structure, as much functionality as possible is moved from the kernel into user space."},{question:"Can you provide an example of a microkernel system?",answer:"Mach is an example of a microkernel system. The Mac OS X kernel (Darwin) is partly based on Mach."},{question:"How does communication occur in a microkernel system?",answer:"Communication in a microkernel system takes place between user modules using message passing."},{question:"What are the benefits of a microkernel system?",answer:"Benefits of a microkernel system include easier extensibility, easier porting to new architectures, increased reliability (as less code is running in kernel mode), and improved security."},{question:"What is a detriment of a microkernel system?",answer:"A potential detriment of a microkernel system is the performance overhead of user space to kernel space communication."},{question:"What is the primary goal of debugging in the context of operating systems?",answer:"Debugging in operating systems involves finding and fixing errors, commonly known as bugs, to enhance system stability and performance."},{question:"How do operating systems handle error information?",answer:"Operating systems generate log files containing error information. Additionally, the failure of an application can lead to the creation of a core dump file, capturing the memory state of the process."},{question:"What does a crash dump file in operating systems contain?",answer:"In the case of an operating system failure, a crash dump file is generated, containing information about the kernel memory at the time of the crash."},{question:"Aside from fixing crashes, what is another aspect of operating-system debugging?",answer:"Beyond addressing crashes, operating-system debugging includes performance tuning to optimize system performance. This may involve using trace listings of activities recorded for analysis and profiling, which is a periodic sampling of the instruction pointer to identify statistical trends."},{question:"What is the purpose of operating system generation?",answer:"Operating systems are designed to run on any of a class of machines, but they must be configured for each specific computer site. Operating system generation involves configuring the system for a particular hardware setup."},{question:"What is the role of the SYSGEN program in operating system generation?",answer:"The SYSGEN program obtains information about the specific configuration of the hardware system. It is used to build a system-specific compiled kernel or system-tuned configuration, potentially resulting in more efficient code than a one-size-fits-all general kernel."},{question:"What are the objectives of the SYSGEN program?",answer:"The SYSGEN program's objectives include obtaining hardware-specific information and building a system configuration that is optimized for the particular computer site. This can lead to the generation of more efficient and tailored operating system code."}]},{title:"OS: Lecture 4",subtitle:"Process",flashcards:[{question:"What are the multiple parts of a process?",answer:`* Program code (text section)
* Current activity (program counter, processor registers)
* Stack (temporary data like function parameters, return addresses, local variables)
* Data section (containing global variables)
* Heap (containing dynamically allocated memory during runtime)`},{question:"Can one program result in several processes?",answer:"Yes, one program can be associated with several processes, especially when multiple users execute the same program."},{question:"When does a program become a process?",answer:"When its executable file is loaded into memory."}]},{title:"OS: Lecture 5",subtitle:"Thread",flashcards:[{question:"What is the notion of a thread?",answer:"A thread is a fundamental unit of CPU utilization and forms the basis of multithreaded computer systems."},{question:"Why are most modern applications multithreaded?",answer:"Most modern applications are multithreaded to run multiple tasks within the application concurrently. This allows for tasks such as updating the display, fetching data, spell checking, and handling network requests to be implemented by separate threads."},{question:"What is the advantage of using threads for tasks within an application?",answer:"Thread creation is light-weight compared to process creation, making it more efficient. Using threads can simplify code and increase overall application efficiency by allowing multiple tasks to run concurrently."},{question:"Are kernels generally multithreaded?",answer:"Yes, kernels are generally multithreaded, contributing to better system performance and resource utilization."}]}];function Oe(t){let e;return{c(){e=_(t[0])},m(n,s){W(n,e,s)},p(n,s){s&1&&O(e,n[0])},d(n){n&&x(e)}}}function Ce(t){let e;return{c(){e=_(t[1])},m(n,s){W(n,e,s)},p(n,s){s&2&&O(e,n[1])},d(n){n&&x(e)}}}function He(t){let e,n,s=t[2]?"Answer":"Question",i,o,m,f,l;function c(a,d){return a[2]?Ce:Oe}let r=c(t),u=r(t);return{c(){e=b("div"),n=b("div"),i=_(s),o=T(),m=b("div"),u.c(),k(n,"class","question-answer svelte-1c9grjx"),k(m,"class","question-answer-content svelte-1c9grjx"),k(e,"class","flashcard svelte-1c9grjx"),k(e,"role","button"),k(e,"tabindex","0")},m(a,d){W(a,e,d),y(e,n),y(n,i),y(e,o),y(e,m),u.m(m,null),f||(l=[z(e,"click",t[3]),z(e,"keypress",t[3])],f=!0)},p(a,[d]){d&4&&s!==(s=a[2]?"Answer":"Question")&&O(i,s),r===(r=c(a))&&u?u.p(a,d):(u.d(1),u=r(a),u&&(u.c(),u.m(m,null)))},i:S,o:S,d(a){a&&x(e),u.d(),f=!1,A(l)}}}function Pe(t,e,n){let{question:s}=e,{answer:i}=e,o=!1;function m(){o&&n(2,o=!1)}function f(){n(2,o=!o)}return t.$$set=l=>{"question"in l&&n(0,s=l.question),"answer"in l&&n(1,i=l.answer)},[s,i,o,f,m]}class Le extends j{constructor(e){super(),N(this,e,Pe,He,E,{question:0,answer:1,resetState:4})}get resetState(){return this.$$.ctx[4]}}function le(t,e,n){const s=t.slice();return s[1]=e[n].question,s[2]=e[n].answer,s}function ce(t){let e,n=t[0].subtitle+"",s;return{c(){e=b("p"),s=_(n),k(e,"class","subtitle svelte-ms8g2g")},m(i,o){W(i,e,o),y(e,s)},p(i,o){o&1&&n!==(n=i[0].subtitle+"")&&O(s,n)},d(i){i&&x(e)}}}function me(t){let e,n;return e=new Le({props:{question:t[1],answer:t[2]}}),{c(){R(e.$$.fragment)},m(s,i){D(e,s,i),n=!0},p(s,i){const o={};i&1&&(o.question=s[1]),i&1&&(o.answer=s[2]),e.$set(o)},i(s){n||(q(e.$$.fragment,s),n=!0)},o(s){I(e.$$.fragment,s),n=!1},d(s){B(e,s)}}}function $e(t){let e,n,s=t[0].title+"",i,o,m,f,l=t[0].subtitle.length>0&&ce(t),c=U(t[0].flashcards),r=[];for(let a=0;a<c.length;a+=1)r[a]=me(le(t,c,a));const u=a=>I(r[a],1,1,()=>{r[a]=null});return{c(){e=b("div"),n=b("h1"),i=_(s),o=T(),l&&l.c(),m=T();for(let a=0;a<r.length;a+=1)r[a].c();k(n,"class","svelte-ms8g2g")},m(a,d){W(a,e,d),y(e,n),y(n,i),y(e,o),l&&l.m(e,null),y(e,m);for(let p=0;p<r.length;p+=1)r[p]&&r[p].m(e,null);f=!0},p(a,[d]){if((!f||d&1)&&s!==(s=a[0].title+"")&&O(i,s),a[0].subtitle.length>0?l?l.p(a,d):(l=ce(a),l.c(),l.m(e,m)):l&&(l.d(1),l=null),d&1){c=U(a[0].flashcards);let p;for(p=0;p<c.length;p+=1){const M=le(a,c,p);r[p]?(r[p].p(M,d),q(r[p],1)):(r[p]=me(M),r[p].c(),q(r[p],1),r[p].m(e,null))}for(ne(),p=c.length;p<r.length;p+=1)u(p);se()}},i(a){if(!f){for(let d=0;d<c.length;d+=1)q(r[d]);f=!0}},o(a){r=r.filter(Boolean);for(let d=0;d<r.length;d+=1)I(r[d]);f=!1},d(a){a&&x(e),l&&l.d(),ee(r,a)}}}function Ve(t,e,n){let{topic:s}=e;return t.$$set=i=>{"topic"in i&&n(0,s=i.topic)},[s]}class Ue extends j{constructor(e){super(),N(this,e,Ve,$e,E,{topic:0})}}function ue(t,e,n){const s=t.slice();return s[5]=e[n],s}function de(t){let e,n=t[5].label+"",s,i,o,m;function f(){return t[4](t[5])}return{c(){e=b("button"),s=_(n),i=T(),k(e,"class","dropdown-item svelte-1mmmvwn")},m(l,c){W(l,e,c),y(e,s),y(e,i),o||(m=z(e,"click",f),o=!0)},p(l,c){t=l,c&2&&n!==(n=t[5].label+"")&&O(s,n)},d(l){l&&x(e),o=!1,m()}}}function Ae(t){let e,n,s,i,o,m,f,l=U(t[1]),c=[];for(let r=0;r<l.length;r+=1)c[r]=de(ue(t,l,r));return{c(){e=b("div"),n=b("button"),s=_(t[0]),i=T(),o=b("div");for(let r=0;r<c.length;r+=1)c[r].c();k(n,"class","dropdown-button svelte-1mmmvwn"),k(o,"class","dropdown-content svelte-1mmmvwn"),K(o,"display",t[2]?"block":"none"),k(e,"class","dropdown svelte-1mmmvwn")},m(r,u){W(r,e,u),y(e,n),y(n,s),y(e,i),y(e,o);for(let a=0;a<c.length;a+=1)c[a]&&c[a].m(o,null);m||(f=z(n,"click",t[3]),m=!0)},p(r,[u]){if(u&1&&O(s,r[0]),u&6){l=U(r[1]);let a;for(a=0;a<l.length;a+=1){const d=ue(r,l,a);c[a]?c[a].p(d,u):(c[a]=de(d),c[a].c(),c[a].m(o,null))}for(;a<c.length;a+=1)c[a].d(1);c.length=l.length}u&4&&K(o,"display",r[2]?"block":"none")},i:S,o:S,d(r){r&&x(e),ee(c,r),m=!1,f()}}}function Fe(t,e,n){let{label:s}=e,{items:i}=e,o=!1;function m(){n(2,o=!o)}const f=l=>{l.onClick(),n(2,o=!1)};return t.$$set=l=>{"label"in l&&n(0,s=l.label),"items"in l&&n(1,i=l.items)},[s,i,o,m,f]}class ze extends j{constructor(e){super(),N(this,e,Fe,Ae,E,{label:0,items:1})}}function De(t){let e,n,s,i;return{c(){e=b("button"),n=_(t[0]),k(e,"class","svelte-1bual08")},m(o,m){W(o,e,m),y(e,n),s||(i=z(e,"click",function(){Z(t[1])&&t[1].apply(this,arguments)}),s=!0)},p(o,[m]){t=o,m&1&&O(n,t[0])},i:S,o:S,d(o){o&&x(e),s=!1,i()}}}function Be(t,e,n){let{label:s}=e,{onClick:i}=e;return t.$$set=o=>{"label"in o&&n(0,s=o.label),"onClick"in o&&n(1,i=o.onClick)},[s,i]}class Ee extends j{constructor(e){super(),N(this,e,Be,De,E,{label:0,onClick:1})}}function he(t,e,n){const s=t.slice();return s[2]=e[n],s[4]=n,s}function pe(t){let e,n;return e=new Ue({props:{topic:t[2]}}),{c(){R(e.$$.fragment)},m(s,i){D(e,s,i),n=!0},i(s){n||(q(e.$$.fragment,s),n=!0)},o(s){I(e.$$.fragment,s),n=!1},d(s){B(e,s)}}}function fe(t){let e,n,s=t[0]===t[4]&&pe(t);return{c(){s&&s.c(),e=xe()},m(i,o){s&&s.m(i,o),W(i,e,o),n=!0},p(i,o){i[0]===i[4]?s?o&1&&q(s,1):(s=pe(i),s.c(),q(s,1),s.m(e.parentNode,e)):s&&(ne(),I(s,1,1,()=>{s=null}),se())},i(i){n||(q(s),n=!0)},o(i){I(s),n=!1},d(i){i&&x(e),s&&s.d(i)}}}function Ne(t){let e,n,s,i,o,m,f,l=L[t[0]].flashcards.length+"",c,r,u,a,d,p;n=new ze({props:{label:"Select Topic",items:L.map(t[1])}});let M=U(L),g=[];for(let h=0;h<M.length;h+=1)g[h]=fe(he(t,M,h));const we=h=>I(g[h],1,1,()=>{g[h]=null});return d=new Ee({props:{label:"Scroll to Top",onClick:je}}),{c(){e=b("div"),R(n.$$.fragment),s=T(),i=b("div"),o=T(),m=b("div"),f=_("Number of Flashcards: "),c=_(l),r=T();for(let h=0;h<g.length;h+=1)g[h].c();u=T(),a=b("div"),R(d.$$.fragment),K(i,"margin-right","20px"),k(e,"class","control-box svelte-1lj0z4k")},m(h,w){W(h,e,w),D(n,e,null),y(e,s),y(e,i),y(e,o),y(e,m),y(m,f),y(m,c),W(h,r,w);for(let C=0;C<g.length;C+=1)g[C]&&g[C].m(h,w);W(h,u,w),W(h,a,w),D(d,a,null),p=!0},p(h,[w]){const C={};if(w&1&&(C.items=L.map(h[1])),n.$set(C),(!p||w&1)&&l!==(l=L[h[0]].flashcards.length+"")&&O(c,l),w&1){M=U(L);let v;for(v=0;v<M.length;v+=1){const ie=he(h,M,v);g[v]?(g[v].p(ie,w),q(g[v],1)):(g[v]=fe(ie),g[v].c(),q(g[v],1),g[v].m(u.parentNode,u))}for(ne(),v=M.length;v<g.length;v+=1)we(v);se()}},i(h){if(!p){q(n.$$.fragment,h);for(let w=0;w<M.length;w+=1)q(g[w]);q(d.$$.fragment,h),p=!0}},o(h){I(n.$$.fragment,h),g=g.filter(Boolean);for(let w=0;w<g.length;w+=1)I(g[w]);I(d.$$.fragment,h),p=!1},d(h){h&&(x(e),x(r),x(u),x(a)),B(n),ee(g,h),B(d)}}}function je(){window.scrollTo({top:0,behavior:"smooth"})}function Ge(t,e,n){let s=0;return[s,(o,m)=>({label:o.title,onClick:()=>{n(0,s=m)}})]}class Re extends j{constructor(e){super(),N(this,e,Ge,Ne,E,{})}}new Re({target:document.getElementById("app")});
